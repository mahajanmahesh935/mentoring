# Mentoring Service Config

# Port on which service runs
APPLICATION_PORT = 3000

# Hostname: If the service runs in Docker, the host is the mentoring; if not, it is localhost.
APPLICATION_HOST=mentoring

#Service environment
APPLICATION_ENV = development

#Route after base url
APPLICATION_BASE_URL = /mentoring/

#Token secret to verify the access token
ACCESS_TOKEN_SECRET = 'bsj82AHBxahusub12yexlashsbxAXADHBlaj'

# Internal access token for communicationcation between services via network call
INTERNAL_ACCESS_TOKEN = 'internal-access-token'

# Kafka hosted server url
KAFKA_URL = localhost:9092

# Kafka group to which consumer belongs
KAFKA_GROUP_ID = userservice

# Kafka topic to push notification data
NOTIFICATION_KAFKA_TOPIC = notificationtopic

# Kafka topic name to consume from mentoring topic
KAFKA_MENTORING_TOPIC ="mentoringtopic"

# Kafka topic to push recording data
KAFKA_RECORDING_TOPIC ="recordingtopic"

#user serice host
USER_SERVICE_HOST = 'http://localhost:3001'

#user serice base url
USER_SERVICE_BASE_URL = '/user/'

# Big blue button url
BIG_BLUE_BUTTON_URL = https://dev.mentoring.shikshalokam.org

# Big blue button base url
BIB_BLUE_BUTTON_BASE_URL = /bigbluebutton/

# Meeting end callback events end point
MEETING_END_CALLBACK_EVENTS = https%3A%2F%2Fdev.elevate-apis.shikshalokam.org%2Fmentoring%2Fv1%2Fsessions%2Fcompleted

# Big blue button secret key
BIG_BLUE_BUTTON_SECRET_KEY = n

# Big blue button recording ready callback url
RECORDING_READY_CALLBACK_URL = http%3A%2F%2Flocalhost%3A3000%2F%3FmeetingID%3Dmeet123

# Api doc url
API_DOC_URL = '/api-doc'

#Internal cache expiry time
INTERNAL_CACHE_EXP_TIME = 86400

# Redis Host connectivity url
REDIS_HOST = redis://localhost:6379

#Kafka internal communicationcation
CLEAR_INTERNAL_CACHE = 'mentoringInternal'

#Enable email for reported issue.
ENABLE_EMAIL_FOR_REPORT_ISSUE = true

#Email id of the support team.
SUPPORT_EMAIL_ID = 'support@xyz.com,team@xyz.com'

#Email template code for reported issue.
REPORT_ISSUE_EMAIL_TEMPLATE_CODE = 'user_issue_reported'

#Big blur button logout url
BIG_BLUE_BUTTON_SESSION_END_URL = 'https%3A%2F%2Fmentoring.shikshalokam.org%2Fsessions%2Fdetails%2F'

#Winston logging level
ERROR_LOG_LEVEL='silly'

#Disable all logs by winston
DISABLE_LOG=false

#Number of minutes(defaults to 15 minutes) to end meeting when the last user left(Optional)
BIG_BLUE_BUTTON_LAST_USER_TIMEOUT_MINUTES = 15

#Default meeting service/platform
DEFAULT_MEETING_SERVICE="BBB"

# The number of minutes before a session start time that users are allowed to edit the session.
SESSION_EDIT_WINDOW_MINUTES=0

#Number of users that can enroll to a given session, 0 means no limit to  enrolled users
SESSION_MENTEE_LIMIT=25

# Scheduler service host
SCHEDULER_SERVICE_HOST="http://localhost:4000"

# Scheduler service base url
SCHEDULER_SERVICE_BASE_URL= '/scheduler/'

# Default organisation code
DEFAULT_ORGANISATION_CODE= 'sl'

# Default organisation id
DEFAULT_ORG_ID = 1

# Email template codes
MENTEE_SESSION_ENROLLMENT_BY_MANAGER_EMAIL_TEMPLATE= 'mentee_session_enrollment_by_manager'
MENTOR_PRIVATE_SESSION_INVITE_BY_MANAGER_EMAIL_TEMPLATE= 'mentor_invite_private_session_by_manager'
MENTOR_PUBLIC_SESSION_INVITE_BY_MANAGER_EMAIL_TEMPLATE= 'mentor_invite_public_session_by_manager'
MENTOR_SESSION_DELETE_BY_MANAGER_EMAIL_TEMPLATE= 'session_deleted_by_manager'
MENTEE_SESSION_EDITED_BY_MANAGER_EMAIL_TEMPLATE= 'mentee_session_edited_by_manager_email_template'
MENTOR_SESSION_EDITED_BY_MANAGER_EMAIL_TEMPLATE= 'mentor_session_edited_by_manager_email_template'

# Allowed host by -CORS security
ALLOWED_HOST = "http://exampleDomain.com"

# Downloadabale url exipres after
DOWNLOAD_URL_EXPIRATION_DURATION = 120000 #for gcloud and azure add it minutes as '1m' for aws and oci add only in seconds '60'
# Expiry time for the signed urls
SIGNED_URL_EXPIRY_DURATION = 120000 #for gcloud and azure add it minutes as '1m' for aws and oci add only in seconds '60'
#Authentication meathod to be used
AUTH_METHOD=native #or keycloak_public_key

#Minimum duration for availability, 0 to disable.
MINIMUM_DURATION_FOR_AVAILABILITY=15

#True to allow multiple bookings
MULTIPLE_BOOKING=false

# Cloud storage provider in azure, aws, gcloud, oci or s3
CLOUD_STORAGE_PROVIDER=aws
# Cloud storage identity [Azure Account Name, AWS Access Key, GCP Client Email, OCI S3 Access Key or S3 Access Key]
CLOUD_STORAGE_ACCOUNTNAME=AKIAIOSFODNN7EXAMPLE
# Cloud storage secret
CLOUD_STORAGE_SECRET=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
# Cloud storage region for AWS and OCI only
CLOUD_STORAGE_REGION=ap-south-1
# Cloud storage endpoint for S3 and OCI only
CLOUD_ENDPOINT=s3.ap-south-1.amazonaws.com
# Cloud storage default bucket name
CLOUD_STORAGE_BUCKETNAME=private-or-public-bucket
# Cloud storage public bucket name
PUBLIC_ASSET_BUCKETNAME=public-bucket
# Cloud storage default bucket type
CLOUD_STORAGE_BUCKET_TYPE=private
# SampleCSV file path
SAMPLE_CSV_FILE_PATH = "sample/bulk_session_creation.csv"
#session upload email template
SESSION_UPLOAD_EMAIL_TEMPLATE_CODE="bulk_upload_session"
#Maximum row limit for session creation csv
CSV_MAX_ROW = 20
#sessions limit for mentor
SESSION_CREATION_MENTOR_LIMIT = 5

#Session verification method
SESSION_VERIFICATION_METHOD= user_service_authenticated #or null

# The token used for administrative access. This should be kept secure and only provided to trusted users.
ADMIN_ACCESS_TOKEN='samplevalue'

# The header name used to pass the admin access token in HTTP requests.
ADMIN_TOKEN_HEADER_NAME='admin-auth-token'

# The header name used to pass the organization ID in HTTP requests. This helps identify the organization associated with the request.
ORG_ID_HEADER_NAME='organization-id'

# Flag to enable/disable chat chapabilities
ENABLE_CHAT=true

#If chat is enables
COMMUNICATION_SERVICE_HOST=http://localhost:3123

# Base URL for the Communication Service
COMMUNICATION_SERVICE_BASE_URL='/communications'
